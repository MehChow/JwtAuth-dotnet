services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5216:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=db;Database=Meh-Ecommerce;User Id=sa;Password=Zz060400..;TrustServerCertificate=True;
      - Authentication__Google__ClientId=790546939881-p6dvtl1t2917pql5garo1o107de3o24f.apps.googleusercontent.com
      - Authentication__Google__ClientSecret=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
      - Authentication__Google__RedirectUri=http://localhost:3000
      - AppSettings__Token=NoiThatlooksfkinglongbrowtfhowLongITNEEDSTOBE!!!!!NoiThatlooksfkinglongbrowtfhowLongITNEEDSTOBE!!!!!NoiThatlooksfkinglongbrowtfhowLongITNEEDSTOBE!!!!!
      - AppSettings__Issuer=MehJwt
      - AppSettings__Audience=MehAudience
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Zz060400..
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sql-data:/var/opt/mssql
    healthcheck:
      test: ["CMD", "sh", "-c", "ps aux | grep '[s]qlservr'"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s # Increased to give SQL Server more time to start
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  sql-data:
